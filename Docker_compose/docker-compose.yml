version: '3.8'

services:
  nginx:
    container_name: nginx
    build: 
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "${NGINX_PORT}:80"
    depends_on:
      - frontend
      - backend
    networks:
      - net_web

  frontend:
    container_name: frontend
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/user/src/app
      - /user/src/app/node_modules
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    networks:
      - net_web

  backend:
    container_name: backend
    build: 
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    networks:
      - net_web
    
  postgres:
    container_name: postgres
    image: postgres:alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - net_web
  
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    volumes:
      - pgadming_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - net_web


volumes:
  postgres_data:
  pgadming_data:

networks:
  net_web:
    driver: bridge